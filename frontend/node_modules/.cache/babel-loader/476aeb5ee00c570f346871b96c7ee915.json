{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ltbt-podcast\\\\frontend\\\\src\\\\components\\\\Product.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Store.scss\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { Store } from \"../Store\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Product(props) {\n  _s();\n\n  const {\n    product\n  } = props;\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart: {\n      cartItems\n    }\n  } = state;\n\n  const addToCartHandler = async item => {\n    //find if product exists in the cart\n    const existItem = cartItems.find(item => item._id === product._id); //if it exists, increase quantity by 1 or set it to 1\n\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const {\n      data\n    } = await axios.get(`/api/store/${item._id}`);\n\n    if (data.countInStock < quantity) {\n      window.alert(\"Sorry, product is out of stock.\");\n      return;\n    }\n\n    ctxDispatch({\n      type: \"CART_ADD_ITEM\",\n      payload: { ...item,\n        quantity\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/store/${product.slug}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          className: \"about-team-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-info\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/store/${product.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-name\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"product-price\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" $ \", product.price, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), product.countInStock === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          disabled: true,\n          children: \"Out of stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addToCartHandler(product),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, product.slug, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"XDbruNh/h18/KyvLzI/kuU/R8wE=\");\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["D:/PROJECTS/ltbt-podcast/frontend/src/components/Product.jsx"],"names":["Link","axios","useContext","Store","Button","Product","props","product","state","dispatch","ctxDispatch","cart","cartItems","addToCartHandler","item","existItem","find","_id","quantity","data","get","countInStock","window","alert","type","payload","slug","image","name","price"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,QAAQ,EAAEC;AAAnB,MAAmCR,UAAU,CAACC,KAAD,CAAnD;AACA,QAAM;AACJQ,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFJ,KAFJ;;AAIA,QAAMK,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvC;AACA,UAAMC,SAAS,GAAGH,SAAS,CAACI,IAAV,CAAgBF,IAAD,IAAUA,IAAI,CAACG,GAAL,KAAaV,OAAO,CAACU,GAA9C,CAAlB,CAFuC,CAGvC;;AACA,UAAMC,QAAQ,GAAGH,SAAS,GAAGA,SAAS,CAACG,QAAV,GAAqB,CAAxB,GAA4B,CAAtD;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAW,cAAaN,IAAI,CAACG,GAAI,EAAjC,CAAvB;;AAEA,QAAIE,IAAI,CAACE,YAAL,GAAoBH,QAAxB,EAAkC;AAChCI,MAAAA,MAAM,CAACC,KAAP,CAAa,iCAAb;AACA;AACD;;AAEDb,IAAAA,WAAW,CAAC;AACVc,MAAAA,IAAI,EAAE,eADI;AAEVC,MAAAA,OAAO,EAAE,EAAE,GAAGX,IAAL;AAAWI,QAAAA;AAAX;AAFC,KAAD,CAAX;AAID,GAhBD;;AAkBA,sBACE;AAAA,eACG,GADH,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASX,OAAO,CAACmB,IAAK,EAAjC;AAAA,+BACE;AACE,UAAA,GAAG,EAAEnB,OAAO,CAACoB,KADf;AAEE,UAAA,GAAG,EAAEpB,OAAO,CAACqB,IAFf;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASrB,OAAO,CAACmB,IAAK,EAAjC;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC,cAAb;AAAA,sBAA6BnB,OAAO,CAACqB;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,iCACE;AAAA,8BAAYrB,OAAO,CAACsB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOGtB,OAAO,CAACc,YAAR,KAAyB,CAAzB,gBACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,QAAQ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACN,OAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,OAA8BA,OAAO,CAACmB,IAAtC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAxDQrB,O;;KAAAA,O;AA0DT,eAAeA,OAAf","sourcesContent":["import \"../styles/Store.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction Product(props) {\r\n  const { product } = props;\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { cartItems },\r\n  } = state;\r\n\r\n  const addToCartHandler = async (item) => {\r\n    //find if product exists in the cart\r\n    const existItem = cartItems.find((item) => item._id === product._id);\r\n    //if it exists, increase quantity by 1 or set it to 1\r\n    const quantity = existItem ? existItem.quantity + 1 : 1;\r\n    const { data } = await axios.get(`/api/store/${item._id}`);\r\n\r\n    if (data.countInStock < quantity) {\r\n      window.alert(\"Sorry, product is out of stock.\");\r\n      return;\r\n    }\r\n\r\n    ctxDispatch({\r\n      type: \"CART_ADD_ITEM\",\r\n      payload: { ...item, quantity },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <div className=\"product\" key={product.slug}>\r\n        <Link to={`/store/${product.slug}`}>\r\n          <img\r\n            src={product.image}\r\n            alt={product.name}\r\n            className=\"about-team-img\"\r\n          />\r\n        </Link>\r\n        <div className=\"product-info\">\r\n          <Link to={`/store/${product.slug}`}>\r\n            <p className=\"product-name\">{product.name}</p>\r\n          </Link>\r\n          <p className=\"product-price\">\r\n            <strong> $ {product.price} </strong>\r\n          </p>\r\n          {product.countInStock === 0 ? (\r\n            <Button variant=\"light\" disabled>\r\n              Out of stock\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => addToCartHandler(product)}>\r\n              Add to cart\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"]},"metadata":{},"sourceType":"module"}